package ddd_mining_connect_success;

import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;


public class Ddd_connect_reducer extends Reducer<Text, Text, Text, Text> {
 // private Text result = new Text();
  private IntWritable result = new IntWritable();
  public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
	  int localsum = 0;
	  int relaysum = 0;
	  int upnpsum = 0;
	  int othersum = 0;
	  Text outwordV = new Text();
	  System.out.println("----"+key+"----");  

	  
	  for (Text val : values) {
String patternStr = "(.+)\\s(.+)";
Pattern pattern = Pattern.compile(patternStr);
			 System.out.println("**"+val.toString());
Matcher matcher = pattern.matcher(val.toString());

boolean matchFound = matcher.find();
if(matchFound==true) {
		  if(matcher.group(1).toString().indexOf("Local") != -1){
			  System.out.println("matcher.group(1):"+matcher.group(1).toString());
			  localsum = localsum+Integer.valueOf(matcher.group(2).toString());
		  }else if(matcher.group(1).toString().indexOf("UPnP")!= -1){
			  System.out.println("matcher.group(1):"+matcher.group(1).toString());
			  upnpsum = upnpsum+Integer.valueOf(matcher.group(2).toString());
		  }else if(matcher.group(1).toString().indexOf("Relay")!= -1){
			  System.out.println("matcher.group(1):"+matcher.group(1).toString());
			  relaysum = relaysum+Integer.valueOf(matcher.group(2).toString());
		  }else{
			  System.out.println("matcher.group(1):"+matcher.group(1).toString());
			  othersum = othersum+Integer.valueOf(matcher.group(2).toString());
		  }
        }else{
        	 System.out.println("error");
        }
}
	  System.out.println(key);
	  
	  System.out.println(localsum+"*"+upnpsum+"*"+relaysum+"*"+othersum);
	  
	  if(localsum>0){
		  outwordV.set("Local	1	"+localsum);
	  }else if(upnpsum>0){
		  outwordV.set("UPnP	1	"+upnpsum);
	  }else if(relaysum>0){
		  outwordV.set("Relay	1	"+relaysum);
	  }else if(othersum>0){
		  outwordV.set("unknown	1	"+localsum+"*"+upnpsum+"*"+relaysum+"*"+othersum);
	  }else{
		  outwordV.set("unknown	0	0");
	  }
	  System.out.println(key+"****"+outwordV);
	  context.write(key, outwordV);
	  outwordV.set("");
localsum = 0;
 relaysum = 0;
upnpsum = 0;
 othersum = 0;

  }
	}
